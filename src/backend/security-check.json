{"dependencies": [{"name": "aiohappyeyeballs", "version": "2.6.1", "vulns": []}, {"name": "aiohttp", "version": "3.12.7", "vulns": []}, {"name": "aioice", "version": "0.10.1", "vulns": []}, {"name": "aiortc", "version": "1.13.0", "vulns": []}, {"name": "aiosignal", "version": "1.3.2", "vulns": []}, {"name": "aniso8601", "version": "10.0.1", "vulns": []}, {"name": "annotated-types", "version": "0.7.0", "vulns": []}, {"name": "anyio", "version": "4.9.0", "vulns": []}, {"name": "argcomplete", "version": "3.6.2", "vulns": []}, {"name": "asgiref", "version": "3.8.1", "vulns": []}, {"name": "attrs", "version": "23.2.0", "vulns": []}, {"name": "automat", "version": "22.10.0", "vulns": []}, {"name": "av", "version": "14.4.0", "vulns": []}, {"name": "azure-ai-evaluation", "version": "1.6.0", "vulns": []}, {"name": "azure-ai-inference", "version": "1.0.0b9", "vulns": []}, {"name": "azure-ai-projects", "version": "1.0.0b10", "vulns": []}, {"name": "azure-common", "version": "1.1.28", "vulns": []}, {"name": "azure-core", "version": "1.34.0", "vulns": []}, {"name": "azure-core-tracing-opentelemetry", "version": "1.0.0b12", "vulns": []}, {"name": "azure-cosmos", "version": "4.9.0", "vulns": []}, {"name": "azure-identity", "version": "1.23.0", "vulns": []}, {"name": "azure-monitor-events-extension", "version": "0.1.0", "vulns": []}, {"name": "azure-monitor-opentelemetry", "version": "1.6.10", "vulns": []}, {"name": "azure-monitor-opentelemetry-exporter", "version": "1.0.0b37", "vulns": []}, {"name": "azure-search-documents", "version": "11.6.0b12", "vulns": []}, {"name": "azure-storage-blob", "version": "12.25.1", "vulns": []}, {"name": "babel", "version": "2.10.3", "vulns": []}, {"name": "bcc", "skip_reason": "Dependency not found on PyPI and could not be audited: bcc (0.29.1)"}, {"name": "bcrypt", "version": "3.2.2", "vulns": []}, {"name": "blinker", "version": "1.9.0", "vulns": []}, {"name": "boolean-py", "version": "5.0", "vulns": []}, {"name": "boto3", "version": "1.34.46", "vulns": []}, {"name": "botocore", "version": "1.34.46", "vulns": []}, {"name": "cachecontrol", "version": "0.14.3", "vulns": []}, {"name": "certifi", "version": "2023.11.17", "vulns": [{"id": "PYSEC-2024-230", "fix_versions": ["2024.7.4"], "aliases": ["CVE-2024-39689"], "description": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi starting in 2021.05.30 and prior to 2024.07.4 recognized root certificates from `GLOBALTRUST`. Certifi 2024.07.04 removes root certificates from `GLOBALTRUST` from the root store. These are in the process of being removed from Mozilla's trust store. `GLOBALTRUST`'s root certificates are being removed pursuant to an investigation which identified \"long-running and unresolved compliance issues.\""}]}, {"name": "cffi", "version": "1.17.1", "vulns": []}, {"name": "chardet", "version": "5.2.0", "vulns": []}, {"name": "click", "version": "8.1.6", "vulns": []}, {"name": "cloud-init", "skip_reason": "Dependency not found on PyPI and could not be audited: cloud-init (24.4.1)"}, {"name": "cloudevents", "version": "1.12.0", "vulns": []}, {"name": "colorama", "version": "0.4.6", "vulns": []}, {"name": "command-not-found", "skip_reason": "Dependency not found on PyPI and could not be audited: command-not-found (0.3)"}, {"name": "configobj", "version": "5.0.8", "vulns": [{"id": "GHSA-c33w-24p9-8m24", "fix_versions": ["5.0.9"], "aliases": ["CVE-2023-26112"], "description": "All versions of the package configobj are vulnerable to Regular Expression Denial of Service (ReDoS) via the validate function, using (.+?)\\((.*)\\). **Note:** This is only exploitable in the case of a developer, putting the offending value in a server side configuration file."}]}, {"name": "constantly", "version": "23.10.4", "vulns": []}, {"name": "coverage", "version": "7.8.2", "vulns": []}, {"name": "cryptography", "version": "45.0.3", "vulns": []}, {"name": "cyclonedx-python-lib", "version": "9.1.0", "vulns": []}, {"name": "dbus-python", "version": "1.3.2", "vulns": []}, {"name": "defusedxml", "version": "0.7.1", "vulns": []}, {"name": "deprecated", "version": "1.2.18", "vulns": []}, {"name": "deprecation", "version": "2.1.0", "vulns": []}, {"name": "distro", "version": "1.9.0", "vulns": []}, {"name": "distro-info", "skip_reason": "Dependency not found on PyPI and could not be audited: distro-info (1.7+build1)"}, {"name": "dnspython", "version": "2.7.0", "vulns": []}, {"name": "docstring-parser", "version": "0.16", "vulns": []}, {"name": "fastapi", "version": "0.115.12", "vulns": []}, {"name": "filelock", "version": "3.18.0", "vulns": []}, {"name": "filetype", "version": "1.2.0", "vulns": []}, {"name": "fixedint", "version": "0.1.6", "vulns": []}, {"name": "flask", "version": "3.1.1", "vulns": []}, {"name": "flask-cors", "version": "5.0.1", "vulns": [{"id": "GHSA-43qf-4rqw-9q2g", "fix_versions": ["6.0.0"], "aliases": ["CVE-2024-6866"], "description": "corydolphin/flask-cors version 5.0.1 contains a vulnerability where the request path matching is case-insensitive due to the use of the `try_match` function, which is originally intended for matching hosts. This results in a mismatch because paths in URLs are case-sensitive, but the regex matching treats them as case-insensitive. This misconfiguration can lead to significant security vulnerabilities, allowing unauthorized origins to access paths meant to be restricted, resulting in data exposure and potential data leaks."}, {"id": "GHSA-8vgw-p6qm-5gr7", "fix_versions": ["6.0.0"], "aliases": ["CVE-2024-6844"], "description": "A vulnerability in corydolphin/flask-cors version 5.0.1 allows for inconsistent CORS matching due to the handling of the '+' character in URL paths. The request.path is passed through the unquote_plus function, which converts the '+' character to a space ' '. This behavior leads to incorrect path normalization, causing potential mismatches in CORS configuration. As a result, endpoints may not be matched correctly to their CORS settings, leading to unexpected CORS policy application. This can cause unauthorized cross-origin access or block valid requests, creating security vulnerabilities and usability issues."}, {"id": "GHSA-7rxf-gvfg-47g4", "fix_versions": ["6.0.0"], "aliases": ["CVE-2024-6839"], "description": "corydolphin/flask-cors version 5.0.1 contains an improper regex path matching vulnerability. The plugin prioritizes longer regex patterns over more specific ones when matching paths, which can lead to less restrictive CORS policies being applied to sensitive endpoints. This mismatch in regex pattern priority allows unauthorized cross-origin access to sensitive data or functionality, potentially exposing confidential information and increasing the risk of unauthorized actions by malicious actors."}]}, {"name": "flask-restx", "version": "1.3.0", "vulns": []}, {"name": "frozenlist", "version": "1.6.0", "vulns": []}, {"name": "gitdb", "version": "4.0.12", "vulns": []}, {"name": "gitpython", "version": "3.1.44", "vulns": []}, {"name": "google-crc32c", "version": "1.7.1", "vulns": []}, {"name": "googleapis-common-protos", "version": "1.70.0", "vulns": []}, {"name": "greenlet", "version": "3.2.2", "vulns": []}, {"name": "grpcio", "version": "1.72.1", "vulns": []}, {"name": "h11", "version": "0.16.0", "vulns": []}, {"name": "httpcore", "version": "1.0.9", "vulns": []}, {"name": "httplib2", "version": "0.20.4", "vulns": []}, {"name": "httpx", "version": "0.28.1", "vulns": []}, {"name": "hyperlink", "version": "21.0.0", "vulns": []}, {"name": "idna", "version": "3.6", "vulns": [{"id": "PYSEC-2024-60", "fix_versions": ["3.7"], "aliases": ["CVE-2024-3651"], "description": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size."}]}, {"name": "ifaddr", "version": "0.2.0", "vulns": []}, {"name": "importlib-metadata", "version": "8.6.1", "vulns": []}, {"name": "importlib-resources", "version": "6.5.2", "vulns": []}, {"name": "incremental", "version": "22.10.0", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "isodate", "version": "0.7.2", "vulns": []}, {"name": "itsdangerous", "version": "2.2.0", "vulns": []}, {"name": "jaraco-classes", "version": "3.4.0", "vulns": []}, {"name": "jeepney", "version": "0.9.0", "vulns": []}, {"name": "jinja2", "version": "3.1.6", "vulns": []}, {"name": "jiter", "version": "0.10.0", "vulns": []}, {"name": "jmespath", "version": "1.0.1", "vulns": []}, {"name": "joblib", "version": "1.5.1", "vulns": []}, {"name": "jsonpatch", "version": "1.32", "vulns": []}, {"name": "jsonpointer", "version": "2.0", "vulns": []}, {"name": "jsonschema", "version": "4.24.0", "vulns": []}, {"name": "jsonschema-path", "version": "0.3.4", "vulns": []}, {"name": "jsonschema-specifications", "version": "2025.4.1", "vulns": []}, {"name": "keyring", "version": "24.3.1", "vulns": []}, {"name": "launchpadlib", "version": "1.11.0", "vulns": []}, {"name": "lazr-restfulclient", "version": "0.14.6", "vulns": []}, {"name": "lazr-uri", "version": "1.0.6", "vulns": []}, {"name": "lazy-object-proxy", "version": "1.11.0", "vulns": []}, {"name": "license-expression", "version": "30.4.1", "vulns": []}, {"name": "markdown-it-py", "version": "3.0.0", "vulns": []}, {"name": "markupsafe", "version": "2.1.5", "vulns": []}, {"name": "marshmallow", "version": "3.26.1", "vulns": []}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "mercurial", "version": "6.7.2", "vulns": []}, {"name": "more-itertools", "version": "10.7.0", "vulns": []}, {"name": "msal", "version": "1.32.3", "vulns": []}, {"name": "msal-extensions", "version": "1.3.1", "vulns": []}, {"name": "msgpack", "version": "1.1.0", "vulns": []}, {"name": "msrest", "version": "0.7.1", "vulns": []}, {"name": "multidict", "version": "6.4.4", "vulns": []}, {"name": "nest-asyncio", "version": "1.6.0", "vulns": []}, {"name": "netaddr", "version": "0.8.0", "vulns": []}, {"name": "netifaces", "version": "0.11.0", "vulns": []}, {"name": "nltk", "version": "3.9.1", "vulns": []}, {"name": "numpy", "version": "2.2.6", "vulns": []}, {"name": "oauthlib", "version": "3.2.2", "vulns": []}, {"name": "openai", "version": "1.83.0", "vulns": []}, {"name": "openapi-core", "version": "0.19.5", "vulns": []}, {"name": "openapi-schema-validator", "version": "0.6.3", "vulns": []}, {"name": "openapi-spec-validator", "version": "0.7.1", "vulns": []}, {"name": "opentelemetry-api", "version": "1.31.1", "vulns": []}, {"name": "opentelemetry-exporter-otlp-proto-common", "version": "1.31.1", "vulns": []}, {"name": "opentelemetry-exporter-otlp-proto-grpc", "version": "1.31.1", "vulns": []}, {"name": "opentelemetry-exporter-otlp-proto-http", "version": "1.31.1", "vulns": []}, {"name": "opentelemetry-instrumentation", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-asgi", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-dbapi", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-django", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-fastapi", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-flask", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-openai", "version": "0.40.7", "vulns": []}, {"name": "opentelemetry-instrumentation-psycopg2", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-requests", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-urllib", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-urllib3", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-instrumentation-wsgi", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-proto", "version": "1.31.1", "vulns": []}, {"name": "opentelemetry-resource-detector-azure", "version": "0.1.5", "vulns": []}, {"name": "opentelemetry-sdk", "version": "1.31.1", "vulns": []}, {"name": "opentelemetry-semantic-conventions", "version": "0.52b1", "vulns": []}, {"name": "opentelemetry-semantic-conventions-ai", "version": "0.4.9", "vulns": []}, {"name": "opentelemetry-util-http", "version": "0.52b1", "vulns": []}, {"name": "packageurl-python", "version": "0.16.0", "vulns": []}, {"name": "packaging", "version": "24.0", "vulns": []}, {"name": "pandas", "version": "2.2.3", "vulns": []}, {"name": "parse", "version": "1.20.2", "vulns": []}, {"name": "pathable", "version": "0.4.4", "vulns": []}, {"name": "pexpect", "version": "4.9.0", "vulns": []}, {"name": "pillow", "version": "11.0.0", "vulns": []}, {"name": "pip", "version": "24.0", "vulns": []}, {"name": "pip-api", "version": "0.0.34", "vulns": []}, {"name": "pip-audit", "version": "2.9.0", "vulns": []}, {"name": "pip-requirements-parser", "version": "32.0.1", "vulns": []}, {"name": "pipx", "version": "1.7.1", "vulns": []}, {"name": "platformdirs", "version": "4.3.8", "vulns": []}, {"name": "pluggy", "version": "1.6.0", "vulns": []}, {"name": "prance", "version": "23.6.21.0", "vulns": []}, {"name": "promptflow-core", "version": "1.18.0", "vulns": []}, {"name": "promptflow-devkit", "version": "1.18.0", "vulns": []}, {"name": "promptflow-tracing", "version": "1.18.0", "vulns": []}, {"name": "propcache", "version": "0.3.1", "vulns": []}, {"name": "protobuf", "version": "5.29.5", "vulns": []}, {"name": "psutil", "version": "7.0.0", "vulns": []}, {"name": "ptyprocess", "version": "0.7.0", "vulns": []}, {"name": "py-serializable", "version": "2.0.0", "vulns": []}, {"name": "pyasn1", "version": "0.4.8", "vulns": []}, {"name": "pyasn1-modules", "version": "0.2.8", "vulns": []}, {"name": "pybars4", "version": "0.9.13", "vulns": []}, {"name": "pycparser", "version": "2.22", "vulns": []}, {"name": "pydantic", "version": "2.11.5", "vulns": []}, {"name": "pydantic-core", "version": "2.33.2", "vulns": []}, {"name": "pydantic-settings", "version": "2.9.1", "vulns": []}, {"name": "pydash", "version": "7.0.7", "vulns": []}, {"name": "pyee", "version": "13.0.0", "vulns": []}, {"name": "pygments", "version": "2.17.2", "vulns": []}, {"name": "pygobject", "version": "3.48.2", "vulns": []}, {"name": "pyhamcrest", "version": "2.1.0", "vulns": []}, {"name": "pyjwt", "version": "2.10.1", "vulns": []}, {"name": "pylibsrtp", "version": "0.12.0", "vulns": []}, {"name": "pymeta3", "version": "0.5.1", "vulns": []}, {"name": "pyopenssl", "version": "25.1.0", "vulns": []}, {"name": "pyparsing", "version": "3.1.1", "vulns": []}, {"name": "pyparted", "version": "3.12.0", "vulns": []}, {"name": "pyrsistent", "version": "0.20.0", "vulns": []}, {"name": "pyserial", "version": "3.5", "vulns": []}, {"name": "pytest", "version": "8.4.0", "vulns": []}, {"name": "pytest-asyncio", "version": "0.24.0", "vulns": []}, {"name": "pytest-cov", "version": "5.0.0", "vulns": []}, {"name": "python-apt", "skip_reason": "Dependency not found on PyPI and could not be audited: python-apt (2.7.7+ubuntu4)"}, {"name": "python-dateutil", "version": "2.8.2", "vulns": []}, {"name": "python-debian", "skip_reason": "Dependency not found on PyPI and could not be audited: python-debian (0.1.49+ubuntu2)"}, {"name": "python-dotenv", "version": "1.1.0", "vulns": []}, {"name": "python-magic", "version": "0.4.27", "vulns": []}, {"name": "python-multipart", "version": "0.0.20", "vulns": []}, {"name": "pytz", "version": "2024.1", "vulns": []}, {"name": "pyyaml", "version": "6.0.1", "vulns": []}, {"name": "referencing", "version": "0.36.2", "vulns": []}, {"name": "regex", "version": "2024.11.6", "vulns": []}, {"name": "requests", "version": "2.31.0", "vulns": [{"id": "GHSA-9wx4-h78v-vm56", "fix_versions": ["2.32.0"], "aliases": ["CVE-2024-35195"], "description": "When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.  ### Remediation Any of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.  * Upgrade to `requests>=2.32.0`. * For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session. * For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.  ### Related Links * https://github.com/psf/requests/pull/6655"}]}, {"name": "requests-oauthlib", "version": "2.0.0", "vulns": []}, {"name": "rfc3339-validator", "version": "0.1.4", "vulns": []}, {"name": "rich", "version": "13.7.1", "vulns": []}, {"name": "rpds-py", "version": "0.25.1", "vulns": []}, {"name": "ruamel-yaml", "version": "0.18.12", "vulns": []}, {"name": "ruamel-yaml-clib", "version": "0.2.12", "vulns": []}, {"name": "s3transfer", "version": "0.10.1", "vulns": []}, {"name": "scipy", "version": "1.15.3", "vulns": []}, {"name": "secretstorage", "version": "3.3.3", "vulns": []}, {"name": "semantic-kernel", "version": "1.28.1", "vulns": []}, {"name": "service-identity", "version": "24.1.0", "vulns": []}, {"name": "setuptools", "version": "68.1.2", "vulns": [{"id": "GHSA-5rjg-fvgr-3xxf", "fix_versions": ["78.1.1"], "aliases": ["CVE-2025-47273"], "description": "### Summary  A path traversal vulnerability in `PackageIndex` was fixed in setuptools version 78.1.1  ### Details ```     def _download_url(self, url, tmpdir):         # Determine download filename         #         name, _fragment = egg_info_for_url(url)         if name:             while '..' in name:                 name = name.replace('..', '.').replace('\\\\', '_')         else:             name = \"__downloaded__\"  # default if URL has no path contents          if name.endswith('.[egg.zip](http://egg.zip/)'):             name = name[:-4]  # strip the extra .zip before download   -->       filename = os.path.join(tmpdir, name) ```  Here: https://github.com/pypa/setuptools/blob/6ead555c5fb29bc57fe6105b1bffc163f56fd558/setuptools/package_index.py#L810C1-L825C88  `os.path.join()` discards the first argument `tmpdir` if the second begins with a slash or drive letter. `name` is derived from a URL without sufficient sanitization. While there is some attempt to sanitize by replacing instances of '..' with '.', it is insufficient.  ### Risk Assessment As easy_install and package_index are deprecated, the exploitation surface is reduced. However, it seems this could be exploited in a similar fashion like https://github.com/advisories/GHSA-r9hx-vwmv-q579, and as described by POC 4 in https://github.com/advisories/GHSA-cx63-2mw6-8hw5 report: via malicious URLs present on the pages of a package index.  ### Impact An attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to RCE depending on the context.  ### References https://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5 https://github.com/pypa/setuptools/issues/4946"}]}, {"name": "six", "version": "1.16.0", "vulns": []}, {"name": "smmap", "version": "5.0.2", "vulns": []}, {"name": "sniffio", "version": "1.3.1", "vulns": []}, {"name": "sortedcontainers", "version": "2.4.0", "vulns": []}, {"name": "sos", "skip_reason": "Dependency not found on PyPI and could not be audited: sos (4.8.2)"}, {"name": "sqlalchemy", "version": "2.0.41", "vulns": []}, {"name": "ssh-import-id", "version": "5.11", "vulns": []}, {"name": "starlette", "version": "0.46.2", "vulns": []}, {"name": "strictyaml", "version": "1.7.3", "vulns": []}, {"name": "systemd-python", "version": "235", "vulns": []}, {"name": "tabulate", "version": "0.9.0", "vulns": []}, {"name": "tiktoken", "version": "0.9.0", "vulns": []}, {"name": "toml", "version": "0.10.2", "vulns": []}, {"name": "tqdm", "version": "4.67.1", "vulns": []}, {"name": "twisted", "version": "24.3.0", "vulns": [{"id": "PYSEC-2024-75", "fix_versions": ["24.7.0rc1"], "aliases": ["CVE-2024-41810", "GHSA-cf56-g6w6-pqq2"], "description": "Twisted is an event-based framework for internet applications, supporting Python 3.6+. The `twisted.web.util.redirectTo` function contains an HTML injection vulnerability. If application code allows an attacker to control the redirect URL this vulnerability may result in Reflected Cross-Site Scripting (XSS) in the redirect response HTML body. This vulnerability is fixed in 24.7.0rc1."}, {"id": "GHSA-c8m8-j448-xjx7", "fix_versions": ["24.7.0rc1"], "aliases": ["CVE-2024-41671"], "description": "### Summary  The HTTP 1.0 and 1.1 server provided by twisted.web could process pipelined HTTP requests out-of-order, possibly resulting in information disclosure.  ### PoC 0. Start a fresh Debian container: ```sh docker run --workdir /repro --rm -it debian:bookworm-slim ``` 1. Install twisted and its dependencies: ```sh apt -y update && apt -y install ncat git python3 python3-pip \\     && git clone --recurse-submodules https://github.com/twisted/twisted \\     && cd twisted \\     && pip3 install --break-system-packages . ``` 2. Run a twisted.web HTTP server that echos received requests' methods. e.g., the following: ```python from twisted.web import server, resource from twisted.internet import reactor  class TheResource(resource.Resource):     isLeaf = True      def render_GET(self, request) -> bytes:         return b\"GET\"      def render_POST(self, request) -> bytes:         return b\"POST\"  site = server.Site(TheResource()) reactor.listenTCP(80, site) reactor.run() ``` 3. Send it a POST request with a chunked message body, pipelined with another POST request, wait a second, then send a GET request on the same connection: ```sh (printf 'POST / HTTP/1.1\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n0\\r\\n\\r\\nPOST / HTTP/1.1\\r\\nContent-Length: 0\\r\\n\\r\\n'; sleep 1; printf 'GET / HTTP/1.1\\r\\n\\r\\n'; sleep 1) | nc localhost 80 ``` 4. Observe that the responses arrive out of order: ``` HTTP/1.1 200 OK Server: TwistedWeb/24.3.0.post0 Date: Tue, 09 Jul 2024 06:19:41 GMT Content-Length: 5 Content-Type: text/html  POST HTTP/1.1 200 OK Server: TwistedWeb/24.3.0.post0 Date: Tue, 09 Jul 2024 06:19:42 GMT Content-Length: 4 Content-Type: text/html  GET HTTP/1.1 200 OK Server: TwistedWeb/24.3.0.post0 Date: Tue, 09 Jul 2024 06:19:42 GMT Content-Length: 5 Content-Type: text/html  POST ```  ### Impact See [GHSA-xc8x-vp79-p3wm](https://github.com/twisted/twisted/security/advisories/GHSA-xc8x-vp79-p3wm). Further, for instances of twisted.web HTTP servers deployed behind reverse proxies that implement connection pooling, it may be possible for remote attackers to receive responses intended for other clients of the twisted.web server."}]}, {"name": "typing-extensions", "version": "4.14.0", "vulns": []}, {"name": "typing-inspection", "version": "0.4.1", "vulns": []}, {"name": "tzdata", "version": "2025.2", "vulns": []}, {"name": "ubuntu-pro-client", "skip_reason": "Dependency not found on PyPI and could not be audited: ubuntu-pro-client (8001)"}, {"name": "ufw", "skip_reason": "Dependency not found on PyPI and could not be audited: ufw (0.36.2)"}, {"name": "urllib3", "version": "2.0.7", "vulns": [{"id": "GHSA-34jh-p97f-mpxf", "fix_versions": ["1.26.19", "2.2.2"], "aliases": ["CVE-2024-37891"], "description": "When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected.  However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects.  Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident.  Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach.  ## Affected usages  We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:  * Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. * Not disabling HTTP redirects. * Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin.  ## Remediation  * Using the `Proxy-Authorization` header with urllib3's `ProxyManager`. * Disabling HTTP redirects using `redirects=False` when sending requests. * Not using the `Proxy-Authorization` header."}]}, {"name": "userpath", "version": "1.9.2", "vulns": []}, {"name": "uvicorn", "version": "0.34.3", "vulns": []}, {"name": "wadllib", "version": "1.3.6", "vulns": []}, {"name": "waitress", "version": "3.0.2", "vulns": []}, {"name": "walinuxagent", "skip_reason": "Dependency not found on PyPI and could not be audited: walinuxagent (2.9.1.1)"}, {"name": "websockets", "version": "15.0.1", "vulns": []}, {"name": "werkzeug", "version": "3.1.1", "vulns": []}, {"name": "wheel", "version": "0.42.0", "vulns": []}, {"name": "wrapt", "version": "1.17.2", "vulns": []}, {"name": "yarl", "version": "1.20.0", "vulns": []}, {"name": "zipp", "version": "3.22.0", "vulns": []}, {"name": "zope-interface", "version": "6.1", "vulns": []}, {"name": "zstandard", "version": "0.22.0", "vulns": []}], "fixes": []}
